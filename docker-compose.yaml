version: '3.8'

networks:
  my-network:
    driver: bridge

services:
  redis:
    container_name: redis
    image: "redis:alpine"
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - my-network
  db:
    image: 'postgres:14.1'
    ports:
      - "5432:5432"
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=odilo_interview
    networks:
      - my-network
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: "user_events:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - my-network
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - my-network

  spring-app:
    build: .
    container_name: spring-app-container
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/odilo_interview
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - my-network
